
@startuml

Aldeano..|>Jugador
Lobo..|>Jugador
Cazador..|>Aldeano
Caballero..|>Aldeano
Vidente..|>Aldeano
AldeanoComun..|>Aldeano
Angel..|>Aldeano

interface Jugador{
+getId():int
+morir():void
+clone():Jugador
}

abstract Lobo{
-cabello:String
-arma:String
-ropa:String
-aldea:Aldea
-id:int
-nickname:String
+clone():Lobo
+getId():int
+getAldea():Aldea
+getNickname():String
+getArma():void
+getCabello():void
+getRopa():void
}

abstract Aldeano{
-cabello:String
-arma:String
-ropa:String
-aldea:Aldea
-id:int
-nickname:String
+getId():int
+getAldea():Aldea
+getNickname():String
+getArma():void
+getCabello():void
+getRopa():void
}

class Cazador{
-static uniqueinstanceof:Cazador
+static getinstance()
-Cazador()
+setEsbirro():void
}

class Vidente{
-static uniqueinstanceof:Vidente
+static getinstance()
-Vidente()
+descubrirIdentidad():void
}

class Caballero{
-static uniqueinstanceof:Caballero
+static getinstance()
-Caballero()
+setRehen():void
}

class Angel{
-static uniqueinstanceof:Angel
+static getinstance()
-Angel()
+mefui():void
}

class AldeanoComun{
+AldeanoComun()
+clone():AldeanoComun
+morir():void
}

MagiaCaballero..>Magia
MagiaCazador..>Magia
MagiaAngel..>Magia
MagiaVidente..>Magia

interface Magia{
+actua():void
}

class MagiaAngel{
-aDormir:Lobo
+MagiaAngel(aDormir:Lobo,aldeaSobreLaCualActuar:Aldea)
+actua():void
}

class MagiaCazador{
-aDisparar:Jugador
+MagiaCazador(aDisparar:Jugador,aldeaSobreLaCualActuar:Aldea)
+actua():void
}

class MagiaVidente{
-aVer:Jugador
+MagiaVidente(aVer:Jugador,aldeaSobreLaCualActuar:Aldea)
+actua():void
}

class MagiaCaballero{
-sacrificar:Jugador
+MagiaCaballero(sacrificar:Jugador,aldeaSobreLaCualActuar:Aldea)
+actua():void
}
@enduml
